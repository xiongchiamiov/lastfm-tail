#!/usr/bin/env ruby
# encoding: utf-8

# May you recognize your weaknesses and share your strengths.
# May you share freely, never taking more than you give.
# May you find love and love everyone you find.

require 'date'
require 'englify'
require 'inifile'
require 'nice-sigint'
require 'open-uri'
require 'optparse'
require 'xmlsimple'

translationCache = {}

config = IniFile.new("#{Dir.home}/.config/lastfm-tail/config.ini")
config = config['global']
trackLimit    = config['trackLimit'].nil?    ? 10    : config['trackLimit'].to_i
pollFrequency = config['pollFrequency'].nil? ? nil   : config['pollFrequency'].to_i
reverse       = config['reverse'].nil?       ? false : config['reverse'] != 'false'
autoTranslate = config['autoTranslate'].nil? ? true  : config['autoTranslate'] != 'false'
username      = config['username'].nil?      ? 'xiongchiamiov' : config['username']

OptionParser.new do |opts|
	opts.banner = "Usage: #{$0.split('/').last} [options] [USER]"
	
	opts.on('-f', '--follow', "Don't exit after retrieving data, but poll "\
	                         +"Last.fm for new tracks.  Polling frequency "\
	                         +"is controlled by the -F option. Implies -r.") do
		pollFrequency = 5 # Magic number
		reverse = true
	end
	
	opts.on('-F', '--frequency NUM', Integer, 'Poll Last.fm every NUM seconds. '\
	                                +'Defaults to 5.  Implies -f. ') do |num|
		pollFrequency = num
		reverse = true
	end
	
	opts.on('--no-translate', "Don't auto-translate foreign artist names.") do
		autoTranslate = false
	end
	
	opts.on('-n', '--number NUM', Integer, 'List NUM tracks.') do |num|
		if num > 10
			puts 'Last.fm only provides the 10 latest tracks; sorry!'
			exit 1
		end
		
		trackLimit = num
	end
	
	opts.on('-r', '--reverse', 'List tracks from oldest to newest.') do
		reverse = true
	end
	
	opts.on('-v', '--version', 'Show the installed version of lastfm-tail.') do
		puts 'lastfm-tail 1.0.2'
		exit 0
	end
	
	opts.on_tail('-h', '--help', 'Show this help dialog.') do
		puts opts
		exit 0
	end
end.parse!

username = ARGV[-1] || username
lastTimestamp = Time.at(0)

# The logic here dealing with polling is a bit dirty.
begin
	begin
		rss = open("http://ws.audioscrobbler.com/2.0/user/#{username}/recenttracks.rss").read()
	rescue SocketError
		$stderr.write "Network unreachable, trying again in "
		5.downto 1 do |i|
			$stderr.print "#{i} "
			sleep 1
		end
		$stderr.write "\n"
		networkError = true
		next
	end
	networkError = false
	xml = XmlSimple.xml_in rss
	items = xml['channel'][0]['item']
	items.reverse! if reverse
	items.each_with_index do |item, i|
		if i == trackLimit
			break
		end
		
		timestamp = Time.parse item['pubDate'][0]
		# Is this an older item that's overlapping?
		if !pollFrequency.nil? && lastTimestamp >= timestamp
			next
		end
		
		artist, title = item['title'][0].split(' â€“ ')
		if autoTranslate && !artist.ascii_only?
			if translationCache[artist].nil?
				translationCache[artist] = englify(artist)
			end
			artist = translationCache[artist]
		end
		puts "#{artist} - #{title}"
		
		lastTimestamp = timestamp
	end
end while networkError || (!pollFrequency.nil? && sleep(pollFrequency))

